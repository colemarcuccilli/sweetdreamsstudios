rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Users collection - anyone can read/write their own
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == userId;
      // Allow Cloud Functions (Admin SDK) to read/write
      allow read, write: if request.auth == null;
    }

    // Bookings - users can read all, create for themselves
    // Admins or Cloud Functions can modify existing bookings
    match /bookings/{bookingId} {
      // Read access for authenticated users
      allow read: if request.auth != null;
      // Users can create bookings for themselves
      allow create: if request.auth != null && request.resource.data.clientId == request.auth.uid;
      // Admin users can update or delete
      allow update, delete: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Allow Cloud Functions (Admin SDK) full access
      allow read, write: if request.auth == null;
    }

    // Services - readable by authenticated users
    // Only admins or Cloud Functions may write
    match /services/{serviceId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Allow Cloud Functions (Admin SDK) full access
      allow read, write: if request.auth == null;
    }

    // Pricing Rules - readable by authenticated users
    // Only admins or Cloud Functions may write
    match /pricingRules/{ruleId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Allow admin SDK (Cloud Functions) full access
      allow read, write: if request.auth == null;
    }

    // Booking Requests - users can read/write their own, admins can read/write all + Cloud Functions admin access
    match /booking_requests/{requestId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.clientId;
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.clientId;
      // Allow admin SDK (Cloud Functions) to read/write/create
      allow read, write, create: if request.auth == null;
      // TEMPORARY: Allow all authenticated users to create booking requests
      allow create: if request.auth != null;
    }

    // Custom Stripe customers collection (managed by Cloud Functions)
    match /customers/{uid} {
      allow read: if request.auth.uid == uid;
      // Allow Cloud Functions (Admin SDK) to read/write
      allow read, write: if request.auth == null;
      // TEMPORARY: Allow authenticated users to read/write their own customer data
      allow read, write: if request.auth != null && request.auth.uid == uid;

      // Legacy Stripe extension subcollections (kept for backward compatibility)
      match /checkout_sessions/{id} {
        allow read, write: if request.auth.uid == uid;
        // Allow Cloud Functions (Admin SDK) to read/write
        allow read, write: if request.auth == null;
      }
      match /subscriptions/{id} {
        allow read: if request.auth.uid == uid;
        // Allow Cloud Functions (Admin SDK) to read/write
        allow read, write: if request.auth == null;
      }
      match /payments/{id} {
        allow read: if request.auth.uid == uid;
        // Allow Cloud Functions (Admin SDK) to read/write
        allow read, write: if request.auth == null;
      }
    }

    // Optional Stripe events collection for debugging/auditing
    match /stripe_events/{eventId} {
      // Only admins can read stripe events
      allow read: if request.auth != null &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
      // Allow Cloud Functions (Admin SDK) to write events
      allow write: if request.auth == null;
    }

    // Legacy Stripe extension product/price collections (kept for backward compatibility)
    match /products/{id} {
      allow read: if true;
      // Allow Cloud Functions (Admin SDK) to read/write
      allow read, write: if request.auth == null;

      match /prices/{id} {
        allow read: if true;
        // Allow Cloud Functions (Admin SDK) to read/write
        allow read, write: if request.auth == null;
      }
    }
  }
}